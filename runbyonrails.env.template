# -
# runbyonrails.env.template
#  Environment variables for runbyonrails, used with Docker Compose.
#  Copy this file to .runbyonrails.env and fill in the missing values.
#  *.env files are in .gitignore. Make sure they are never committed to the repo.
# Note that the *.env files are not used when deploying to a service like AWS.
# -

RAILS_ENV=production

# Connection string for Dockerized postgres
#
DATABASE_URL=postgresql://<USERNAME>:<PASSWORD>@<DOCKER_DB_SERVICE_NAME>:5432/<DB_NAME>?encoding=utf8&pool=5&timeout=5000


# Both of these values are using the same Redis address but in a high traffic
# environment you may want to separate them if it's a bottleneck.
#
# We'll be using the same Docker link trick for Redis which is how we can
# reference the Redis hostname as `redis`.
#
# CACHE_URL=redis://redis:6379/0
# JOB_WORKER_URL=redis://redis:6379/0


# You would typically use `rake secret` to generate a secure token. It is
# critical that you keep this value private in production.
#
#SECRET_TOKEN=


# This will be the address and port that Puma binds to. The only real
# reason you would ever change this is if you have another service running
# that must be on port 8000.
#
PUMA_LISTEN_ON=0.0.0.0:3000


# Puma supports spawning multiple workers. It will fork out a process at the
# OS level to support concurrent requests. This typically requires more RAM.
WEB_CONCURRENCY=1


# Puma supports threading. Requests are served through an internal thread pool.
# Even on MRI, it is beneficial to leverage multiple threads because I/O operations
# do not lock the GIL. This typically requires more CPU resources.
#
PUMA_MIN_THREADS=1
PUMA_MAX_THREADS=1


# Don't force SSL in the Rails app, since we're handling it via the reverse proxy (nginx)
#
RAILS_FORCE_SSL=false


# Requests that exceed 5 seconds will be termined and dumped to a stack trace.
# Feel free to modify this value to fit the needs of your project, but if you
# have any request that takes more than 5 seconds you probably need to re-think
# what you are doing 99.99% of the time.
#REQUEST_TIMEOUT=5


GOOGLE_ANALYTICS_ID=
